// UI
// REQUESTING
// REQUESTED

// TODO: I was wondering if might worth to refactor those actions into
// separated kind of actions: CALL_ACTIONS, CM_ACTIONS, UI_ACTIONS etc

/* eslint import/prefer-default-export:0 */
export const CALL_MANAGER_ACTIONS = {

  // Logout here
  UI_OPEN_VIDEO_WINDOW : "UI_OPEN_VIDEO_WINDOW",
  UI_CWIC_LOGOUT : "UI_CWIC_LOGOUT",
  UI_CONNECT_DEVICE : "UI_CONNECT_DEVICE",
  // UI actions: those are actually aliases to real action creators on the background
  UI_MAKE_CALL: 'UI_MAKE_CALL',
  UI_QUEUE_REQUEST: 'UI_QUEUE_REQUEST',
  UI_ANSWER_CALL: 'UI_ANSWER_CALL',
  UI_TRANSFER_CALL: 'UI_TRANSFER_CALL',
  UI_CONSULT_CALL: 'UI_CONSULT_CALL',
  UI_HOLD_CALL: 'UI_HOLD_CALL',
  UI_RETRIEVE_CALL: 'UI_RETRIEVE_CALL',
  UI_HANG_UP_CALL: 'UI_HANG_UP_CALL',
  UI_REJECT_CALL: 'UI_REJECT_CALL',
  //

  UI_TYPED_NUMBER: 'UI_TYPED_NUMBER',
  UI_TYPED_EXTENSION: 'UI_TYPED_EXTENSION',
  UI_REASON_STATE_CHANGE: 'UI_REASON_STATE_CHANGE',
  UI_WRAPUP_REASON_STATE_CHANGE: 'UI_WRAPUP_REASON_STATE_CHANGE',
  UI_SHARE_CONTEXT: 'UI_SHARE_CONTEXT',
  UI_EXECUTE_INCOMING_CALL_HOOK: 'UI_EXECUTE_INCOMING_CALL_HOOK',

  QUEUE_UPDATED: 'QUEUE_UPDATED',
  QUEUE_REQUEST_FAILED: 'QUEUE_REQUEST_FAILED',

  // Make a call
  REQUESTING_MAKE_CALL: 'REQUESTING_MAKE_CALL', // Requesting Finesse to Make the call

  INITIATING_CALL: 'INITIATING_CALL',
  OUTGOING_CALL: 'OUTGOING_CALL',

  INCOMING_CALL: 'INCOMING_CALL',

  REQUESTING_ANSWER_CALL: 'REQUESTING_ANSWER_CALL',

  CALL_ACTIVITY: 'CM_CALL_ACTIVITY',

  ACTIVE_CALL: 'ACTIVE_CALL',

  // Transfer a call
  REQUESTING_TRANSFER_CALL: 'REQUESTING_TRANSFER_CALL',

  // Consult a call
  REQUESTING_CONSULT_CALL: 'REQUESTING_CONSULT_CALL',

  // Hold a call
  REQUESTING_HOLD_CALL: 'REQUESTING_HOLD_CALL',
  CALL_ON_HOLD: 'CALL_ON_HOLD',

  // Retrieve a call
  REQUESTING_RETRIEVE_CALL: 'REQUESTING_RETRIEVE_CALL',

  // End a call
  REQUESTING_END_CALL: 'REQUESTING_END_CALL',
  ENDED_CALL: 'ENDED_CALL',

  // Change state
  REQUESTING_REASON_STATE_CHANGE: 'REQUESTING_REASON_STATE_CHANGE',
  PRE_REQUESTING_REASON_STATE_CHANGE: 'PRE_REQUESTING_REASON_STATE_CHANGE',
  REASON_STATE_CHANGED: 'REASON_STATE_CHANGED',

  REQUESTING_WRAPUP_CHANGE: 'REQUESTING_WRAPUP_CHANGE',

  REQUESTING_AGENT_REASON_STATE: 'REQUESTING_AGENT_REASON_STATE',
  AGENT_REASON_STATE_LOADED: 'AGENT_REASON_STATE_LOADED',

  REQUESTING_AGENT_DIALOGS: 'REQUESTING_AGENT_DIALOGS',
  AGENT_DIALOGS_LOADED: 'AGENT_DIALOGS_LOADED',

  // Load reason codes
  REQUESTING_REASON_CODES: 'REQUESTING_REASON_CODES',
  REASON_CODES_LOADED: 'REASON_CODES_LOADED',
  REQUESTING_WRAPUP_REASON_CODES: 'REQUESTING_WRAPUP_REASON_CODES',
  WRAPUP_REASON_CODES_LOADED: 'WRAPUP_REASON_CODES_LOADED',

  REQUESTING_STAFF_EXTENSIONS: 'CM_REQUESTING_STAFF_EXTENSIONS',

  REQUESTING_SYSTEM_INFO: 'REQUESTING_SYSTEM_INFO',
  TIME_SYNC: 'TIME_SYNC',

  // Context sharing
  SHARE_CONTEXT: 'SHARE_CONTEXT',
  CONTEXT_SHARED: 'CONTEXT_SHARED',
  CONTEXT_CHANGED: 'CONTEXT_CHANGED',
  REQUESTING_CONTEXT: 'REQUESTING_CONTEXT',
  CONTEXT_RECEIVED: 'CONTEXT_RECEIVED',
  CONTEXT_CLICKED: 'CONTEXT_CLICKED',
  CONTEXT_READ: 'CONTEXT_READ',
  CONTEXT_CLEAR_TAB_DATA: 'CONTEXT_CLEAR_TAB_DATA',

  // Maybe we should split it into callmanager and call actions
  CM_START: 'CM_START',
  CM_LOGIN: 'CM_LOGIN',
  CM_LOGOUT: 'CM_LOGOUT',
  CM_CONNECT: 'CM_CONNECT',
  CM_GET_AGENT_SETTINGS: 'CM_GET_AGENT_SETTINGS',
  CM_CONNECTED: 'CM_CONNECTED',
  CM_DISCONNECTED: 'CM_DISCONNECTED',
  CM_FAILED: 'CM_FAILED',
  CM_VOICEAPI_FAILED: 'CM_VOICEAPI_FAILED',
  CM_RELOAD: 'CM_RELOAD',
  CM_ERROR: 'CM_ERROR',
  CM_CLEAR_ERROR: 'CM_CLEAR_ERROR',
  CM_FATAL_ERROR: 'CM_FATAL_ERROR',
  CALL_ERROR: 'CALL_ERROR',
  SWITCH_PROTOCOL: 'SWITCH_PROTOCOL',

  CM_FAILOVER: 'CM_FAILOVER',
  CM_CLEAR_FAILOVER_DATA: 'CM_CLEAR_FAILOVER_DATA',
};

